import React, {Component} from 'react'
import {connect} from 'react-redux'
import {
    fetchUsers,createUser
} from 'actions'

class Dashboard extends Component {
    constructor (props) {
        super(props)
        this.state = {
            userName: ''
        };
        this.сreateUser = this.сreateUser.bind(this);
        this.onUserLogin = this.onUserLogin.bind(this);
        this.onFormSubmit = this.onFormSubmit.bind(this);
    }

    onUserLogin(){
        event.preventDefault();
        console.log("LogIn");

    }

    componentDidMount () {
        this.props.fetchUsers();
    }

     onFormSubmit(event){
         event.preventDefault();
        console.log(this.refs );
    }
    сreateUser(){
        console.log(this.state.userName);
        this.props.createUser(
            {
                userName: this.refs.userName.value,
                email: this.refs.email.value,
                pass: this.refs.pass.value
            }
        );
        this.props.fetchUsers();
        this.state = {
            userName: '',
            email: '',
            pass: ''
        };
    }
    render () {
        let listItems = [];
        if(this.props.state.users.length  > 0){
            listItems = this.props.state.users.map((user) =>
                <li key={user._id}>
                    <span> id - {user._id}</span>
                    <span> role - {user.role}</span>
                    <span> email - {user.email}</span>
                    <span> name - {user.name}</span>
                    <span> pass - {user.pass}</span>
                </li>
            );
        }
        return (
            <main className='dashboard-page'>
                <div className='col-md-6' >
                    <h1>User - {this.state.userName || 'none'}</h1>
                    <form onSubmit={this.onFormSubmit}>
                        <label for="userName">UserName</label>
                        <br/>
                        <input ref="userName" className="input" type='text' />
                        <br/>
                        <label for="email">Email</label>
                        <br/>
                        <input ref="email" className="input" type='text' />
                        <br/>
                        <label for="pass">Password</label>
                        <br/>
                        <input ref="pass" className="input" type='text'  />
                        <button type='submit'>dsfsdf</button>
                    </form>
                    <button onClick={this.сreateUser} className="btn">Create new user</button>
                    <ul>
                        {listItems}
                    </ul>
                </div>
                <div className='col-md-6'>
                    <form>
                        <label for="email">Email</label>
                        <br/>
                        <input id="email" className="input" type='text' value={this.state.loginEmail} onChange={this.handleChangeEmailLogin} />
                        <br/>
                        <label for="pass">Password</label>
                        <br/>
                        <input id="pass" className="input" type='text' value={this.state.loginPassword} onChange={this.handleChangePassLogin} />
                    </form>
                    <button onClick={this.onUserLogin} className="btn">Create new user</button>
                </div>

            </main>

        )
    }
}

const mapStateToProps = (state, ownProps) => {
    return {
        state: state,
        ownProps: ownProps
    }
};

const mapDispatchToProps = {
    fetchUsers,
    createUser

};

export default connect(mapStateToProps, mapDispatchToProps)(Dashboard)